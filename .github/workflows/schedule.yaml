---
name: schedule RPM builds
on:
  #schedule:
  #  # * is a special character in YAML so you have to quote this string
  #  - cron:  '55 20 * * *'
  
  push:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      ref:
        description: 'branch ref'
        required: true
        default: 'master'
      timestamp:
        description: 'timestamp identifier'
        required: true
      branch:
        description: 'branch name'
        default: 'master'
        required: false

jobs:
  rpmbuild_el7:
    name: Build an EL7 rpm
    runs-on: ubuntu-latest
    steps:
      - name: checkout code tree
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{github.event.inputs.branch}}

      - name: Run the build in a container (SL7/HEPCloud-CI)
        uses: ./.github/actions/python-command-in-sl7-container
        with:
          python-command: 'setup.py bdist_rpm'
          logfile: 'rpmbuild.log'

      - name: Archive rpm
        uses: actions/upload-artifact@v2
        with:
          name: rpms-DE-${{github.event.inputs.branch}}-${{github.event.inputs.timestamp}}
          path: dist/*.rpm
          if-no-files-found: error

      - name: print Name Variables
        run: |
          echo "ref: ${GITHUB_REF}"
          echo "ref: ${GITHUB_REF##/*}-draft"
          echo "upload_url ${{ steps.create_release.outputs.upload_url }}"
          pwd
          ls dist
          
      - name: Upload RPMs
        run: |
          set -x
          hub release delete "${GITHUB_REF##/*}-draft"
          assets=()
          for asset in ./dist/*.rpm; do
            assets+=("-a" "$asset")
          done
          hub release create "${assets[@]}" -m "${GITHUB_REF##/*}-draft" "${GITHUB_REF##/*}-draft"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
#        with:
#          delete_release: true # default: false
#          tag_name: refs/heads/master # tag name to delete
#          # repo: <owner>/<repoName> # target repo (optional). defaults to repo running this action
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: true
#          
#      - name: Upload Release Asset
#        id: upload-release-asset 
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: dist/*.noarch.rpm
#          asset_content_type: application/octet-stream
